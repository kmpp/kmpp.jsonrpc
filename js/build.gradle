plugins {
    id "com.moowork.node" version "1.2.0"
}

apply plugin: 'kotlin-platform-js'
apply plugin: 'com.moowork.node'

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-js:$kotlin_version"
    compile "org.jetbrains.kotlinx:kotlinx-serialization-runtime-js:$serialization_version"
    testCompile "org.jetbrains.kotlin:kotlin-test-js:$kotlin_version"
    testImplementation "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
    expectedBy project(':common')
}

def target = "${projectDir}/build/classes/main"

[compileKotlin2Js, compileTestKotlin2Js]*.configure {
    kotlinOptions {
        metaInfo = true
        sourceMap = true
        sourceMapEmbedSources = "always"
        moduleKind = 'umd'
    }
}

task populateNodeModules(type: Copy, dependsOn: compileKotlin2Js) {
    from compileKotlin2Js.destinationDir

    configurations.testCompile.each {
        from zipTree(it.absolutePath).matching { include '*.js' }
    }

    into "${buildDir}/node_modules"
}

node {
    version = node_version
    download = true
}

task installMocha(type: NpmTask) {
    args = ['install', 'mocha']
}

task runMocha(type: NodeTask, dependsOn: [compileTestKotlin2Js, populateNodeModules, installMocha]) {
    script = file('node_modules/mocha/bin/mocha')
    args = [compileTestKotlin2Js.outputFile]
}

test.dependsOn runMocha
